name: Build and Release APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag version (e.g., v1.0.0)'
        required: true
        type: string
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_dispatch' && 'master' || github.ref }}
      
    - name: Extract version from tag
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG=${GITHUB_REF#refs/tags/}
        fi
        VERSION=${TAG#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        
    - name: Update pubspec.yaml version
      run: |
        sed -i "s/^version:.*/version: ${{ steps.version.outputs.version }}+${{ github.run_number }}/" pubspec.yaml
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Decode keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
      
    - name: Create key.properties
      run: |
        echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "storeFile=keystore.jks" >> android/key.properties
      
    - name: Build APK - All-in-one (arm64-v8a + armeabi-v7a)
      run: |
        flutter build apk --release --target-platform android-arm64,android-arm
        mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-allinone-release.apk
        
    - name: Build APK - ARM64 (v8a)
      run: |
        flutter build apk --release --target-platform android-arm64
        mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        
    - name: Build APK - ARMv7
      run: |
        flutter build apk --release --target-platform android-arm
        mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: Release ${{ steps.version.outputs.tag }}
        body: |
          ## Changes in this release
          ${{ github.event.head_commit.message }}
          
          ## ðŸ“± Android APK Downloads
          
          - **All-in-one APK** (arm64-v8a + armeabi-v7a): Compatible with most devices
          - **ARM64 APK** (arm64-v8a): For modern 64-bit devices
          - **ARMv7 APK** (armeabi-v7a): For older 32-bit devices
          
        draft: false
        prerelease: false
        
    - name: Upload All-in-one APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-allinone-release.apk
        asset_name: flutter_application_m_team-${{ steps.version.outputs.version }}-allinone.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload ARM64 APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        asset_name: flutter_application_m_team-${{ steps.version.outputs.version }}-arm64-v8a.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload ARMv7 APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
        asset_name: flutter_application_m_team-${{ steps.version.outputs.version }}-armeabi-v7a.apk
        asset_content_type: application/vnd.android.package-archive